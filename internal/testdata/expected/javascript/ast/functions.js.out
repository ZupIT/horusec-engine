     0  *ast.File {
     1  .  Position: ast.Position {}
     2  .  Name: *ast.Ident {
     3  .  .  Name: "functions.js"
     4  .  .  Position: ast.Position {}
     5  .  }
     6  .  Decls: []ast.Decl (len = 10) {
     7  .  .  0: *ast.ImportDecl {
     8  .  .  .  Position: ast.Position {}
     9  .  .  .  Name: *ast.Ident {
    10  .  .  .  .  Name: "fs"
    11  .  .  .  .  Position: ast.Position {}
    12  .  .  .  }
    13  .  .  .  Path: *ast.Ident {
    14  .  .  .  .  Name: "fs"
    15  .  .  .  .  Position: ast.Position {}
    16  .  .  .  }
    17  .  .  }
    18  .  .  1: *ast.FuncDecl {
    19  .  .  .  Position: ast.Position {}
    20  .  .  .  Name: *ast.Ident {
    21  .  .  .  .  Name: "f1"
    22  .  .  .  .  Position: ast.Position {}
    23  .  .  .  }
    24  .  .  .  Type: *ast.FuncType {
    25  .  .  .  .  Position: ast.Position {}
    26  .  .  .  .  Params: *ast.FieldList {
    27  .  .  .  .  .  Position: ast.Position {}
    28  .  .  .  .  .  List: []*ast.Field (len = 2) {
    29  .  .  .  .  .  .  0: *ast.Field {
    30  .  .  .  .  .  .  .  Position: ast.Position {}
    31  .  .  .  .  .  .  .  Name: *ast.Ident {
    32  .  .  .  .  .  .  .  .  Name: "a"
    33  .  .  .  .  .  .  .  .  Position: ast.Position {}
    34  .  .  .  .  .  .  .  }
    35  .  .  .  .  .  .  }
    36  .  .  .  .  .  .  1: *ast.Field {
    37  .  .  .  .  .  .  .  Position: ast.Position {}
    38  .  .  .  .  .  .  .  Name: *ast.Ident {
    39  .  .  .  .  .  .  .  .  Name: "b"
    40  .  .  .  .  .  .  .  .  Position: ast.Position {}
    41  .  .  .  .  .  .  .  }
    42  .  .  .  .  .  .  }
    43  .  .  .  .  .  }
    44  .  .  .  .  }
    45  .  .  .  }
    46  .  .  .  Body: *ast.BlockStmt {
    47  .  .  .  .  Position: ast.Position {}
    48  .  .  .  .  List: []ast.Stmt (len = 1) {
    49  .  .  .  .  .  0: *ast.ReturnStmt {
    50  .  .  .  .  .  .  Position: ast.Position {}
    51  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
    52  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
    53  .  .  .  .  .  .  .  .  Position: ast.Position {}
    54  .  .  .  .  .  .  .  .  Left: *ast.CallExpr {
    55  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
    56  .  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
    57  .  .  .  .  .  .  .  .  .  .  Name: "f2"
    58  .  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
    59  .  .  .  .  .  .  .  .  .  }
    60  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
    61  .  .  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
    62  .  .  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
    63  .  .  .  .  .  .  .  .  .  .  .  Left: *ast.Ident {
    64  .  .  .  .  .  .  .  .  .  .  .  .  Name: "a"
    65  .  .  .  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
    66  .  .  .  .  .  .  .  .  .  .  .  }
    67  .  .  .  .  .  .  .  .  .  .  .  Op: "+"
    68  .  .  .  .  .  .  .  .  .  .  .  Right: *ast.Ident {
    69  .  .  .  .  .  .  .  .  .  .  .  .  Name: "b"
    70  .  .  .  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
    71  .  .  .  .  .  .  .  .  .  .  .  }
    72  .  .  .  .  .  .  .  .  .  .  }
    73  .  .  .  .  .  .  .  .  .  }
    74  .  .  .  .  .  .  .  .  }
    75  .  .  .  .  .  .  .  .  Op: "*"
    76  .  .  .  .  .  .  .  .  Right: *ast.BasicLit {
    77  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
    78  .  .  .  .  .  .  .  .  .  Kind: "number"
    79  .  .  .  .  .  .  .  .  .  Value: "5"
    80  .  .  .  .  .  .  .  .  }
    81  .  .  .  .  .  .  .  }
    82  .  .  .  .  .  .  }
    83  .  .  .  .  .  }
    84  .  .  .  .  }
    85  .  .  .  }
    86  .  .  }
    87  .  .  2: *ast.FuncDecl {
    88  .  .  .  Position: ast.Position {}
    89  .  .  .  Name: *ast.Ident {
    90  .  .  .  .  Name: "f2"
    91  .  .  .  .  Position: ast.Position {}
    92  .  .  .  }
    93  .  .  .  Type: *ast.FuncType {
    94  .  .  .  .  Position: ast.Position {}
    95  .  .  .  .  Params: *ast.FieldList {
    96  .  .  .  .  .  Position: ast.Position {}
    97  .  .  .  .  .  List: []*ast.Field (len = 1) {
    98  .  .  .  .  .  .  0: *ast.Field {
    99  .  .  .  .  .  .  .  Position: ast.Position {}
   100  .  .  .  .  .  .  .  Name: *ast.Ident {
   101  .  .  .  .  .  .  .  .  Name: "a"
   102  .  .  .  .  .  .  .  .  Position: ast.Position {}
   103  .  .  .  .  .  .  .  }
   104  .  .  .  .  .  .  }
   105  .  .  .  .  .  }
   106  .  .  .  .  }
   107  .  .  .  }
   108  .  .  .  Body: *ast.BlockStmt {
   109  .  .  .  .  Position: ast.Position {}
   110  .  .  .  .  List: []ast.Stmt (len = 1) {
   111  .  .  .  .  .  0: *ast.ReturnStmt {
   112  .  .  .  .  .  .  Position: ast.Position {}
   113  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
   114  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
   115  .  .  .  .  .  .  .  .  Position: ast.Position {}
   116  .  .  .  .  .  .  .  .  Left: *ast.Ident {
   117  .  .  .  .  .  .  .  .  .  Name: "a"
   118  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
   119  .  .  .  .  .  .  .  .  }
   120  .  .  .  .  .  .  .  .  Op: "+"
   121  .  .  .  .  .  .  .  .  Right: *ast.BasicLit {
   122  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
   123  .  .  .  .  .  .  .  .  .  Kind: "number"
   124  .  .  .  .  .  .  .  .  .  Value: "10"
   125  .  .  .  .  .  .  .  .  }
   126  .  .  .  .  .  .  .  }
   127  .  .  .  .  .  .  }
   128  .  .  .  .  .  }
   129  .  .  .  .  }
   130  .  .  .  }
   131  .  .  }
   132  .  .  3: *ast.FuncDecl {
   133  .  .  .  Position: ast.Position {}
   134  .  .  .  Name: *ast.Ident {
   135  .  .  .  .  Name: "f3"
   136  .  .  .  .  Position: ast.Position {}
   137  .  .  .  }
   138  .  .  .  Type: *ast.FuncType {
   139  .  .  .  .  Position: ast.Position {}
   140  .  .  .  .  Params: *ast.FieldList {
   141  .  .  .  .  .  Position: ast.Position {}
   142  .  .  .  .  .  List: []*ast.Field (len = 2) {
   143  .  .  .  .  .  .  0: *ast.Field {
   144  .  .  .  .  .  .  .  Position: ast.Position {}
   145  .  .  .  .  .  .  .  Name: *ast.Ident {
   146  .  .  .  .  .  .  .  .  Name: "a"
   147  .  .  .  .  .  .  .  .  Position: ast.Position {}
   148  .  .  .  .  .  .  .  }
   149  .  .  .  .  .  .  }
   150  .  .  .  .  .  .  1: *ast.Field {
   151  .  .  .  .  .  .  .  Position: ast.Position {}
   152  .  .  .  .  .  .  .  Name: *ast.Ident {
   153  .  .  .  .  .  .  .  .  Name: "b"
   154  .  .  .  .  .  .  .  .  Position: ast.Position {}
   155  .  .  .  .  .  .  .  }
   156  .  .  .  .  .  .  }
   157  .  .  .  .  .  }
   158  .  .  .  .  }
   159  .  .  .  }
   160  .  .  .  Body: *ast.BlockStmt {
   161  .  .  .  .  Position: ast.Position {}
   162  .  .  .  .  List: []ast.Stmt (len = 5) {
   163  .  .  .  .  .  0: *ast.AssignStmt {
   164  .  .  .  .  .  .  Position: ast.Position {}
   165  .  .  .  .  .  .  LHS: []ast.Expr (len = 1) {
   166  .  .  .  .  .  .  .  0: *ast.Ident {
   167  .  .  .  .  .  .  .  .  Name: "a"
   168  .  .  .  .  .  .  .  .  Position: ast.Position {}
   169  .  .  .  .  .  .  .  }
   170  .  .  .  .  .  .  }
   171  .  .  .  .  .  .  RHS: []ast.Expr (len = 1) {
   172  .  .  .  .  .  .  .  0: *ast.BasicLit {
   173  .  .  .  .  .  .  .  .  Position: ast.Position {}
   174  .  .  .  .  .  .  .  .  Kind: "number"
   175  .  .  .  .  .  .  .  .  Value: "20"
   176  .  .  .  .  .  .  .  }
   177  .  .  .  .  .  .  }
   178  .  .  .  .  .  }
   179  .  .  .  .  .  1: *ast.AssignStmt {
   180  .  .  .  .  .  .  Position: ast.Position {}
   181  .  .  .  .  .  .  LHS: []ast.Expr (len = 1) {
   182  .  .  .  .  .  .  .  0: *ast.Ident {
   183  .  .  .  .  .  .  .  .  Name: "c"
   184  .  .  .  .  .  .  .  .  Position: ast.Position {}
   185  .  .  .  .  .  .  .  }
   186  .  .  .  .  .  .  }
   187  .  .  .  .  .  .  RHS: []ast.Expr (len = 1) {
   188  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
   189  .  .  .  .  .  .  .  .  Position: ast.Position {}
   190  .  .  .  .  .  .  .  .  Left: *ast.Ident {
   191  .  .  .  .  .  .  .  .  .  Name: "a"
   192  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
   193  .  .  .  .  .  .  .  .  }
   194  .  .  .  .  .  .  .  .  Op: "+"
   195  .  .  .  .  .  .  .  .  Right: *ast.Ident {
   196  .  .  .  .  .  .  .  .  .  Name: "b"
   197  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
   198  .  .  .  .  .  .  .  .  }
   199  .  .  .  .  .  .  .  }
   200  .  .  .  .  .  .  }
   201  .  .  .  .  .  }
   202  .  .  .  .  .  2: *ast.ExprStmt {
   203  .  .  .  .  .  .  Position: ast.Position {}
   204  .  .  .  .  .  .  Expr: *ast.CallExpr {
   205  .  .  .  .  .  .  .  Position: ast.Position {}
   206  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
   207  .  .  .  .  .  .  .  .  Position: ast.Position {}
   208  .  .  .  .  .  .  .  .  Expr: *ast.Ident {
   209  .  .  .  .  .  .  .  .  .  Name: "console"
   210  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
   211  .  .  .  .  .  .  .  .  }
   212  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   213  .  .  .  .  .  .  .  .  .  Name: "log"
   214  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
   215  .  .  .  .  .  .  .  .  }
   216  .  .  .  .  .  .  .  }
   217  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   218  .  .  .  .  .  .  .  .  0: *ast.Ident {
   219  .  .  .  .  .  .  .  .  .  Name: "c"
   220  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
   221  .  .  .  .  .  .  .  .  }
   222  .  .  .  .  .  .  .  }
   223  .  .  .  .  .  .  }
   224  .  .  .  .  .  }
   225  .  .  .  .  .  3: *ast.AssignStmt {
   226  .  .  .  .  .  .  Position: ast.Position {}
   227  .  .  .  .  .  .  LHS: []ast.Expr (len = 1) {
   228  .  .  .  .  .  .  .  0: *ast.Ident {
   229  .  .  .  .  .  .  .  .  Name: "res"
   230  .  .  .  .  .  .  .  .  Position: ast.Position {}
   231  .  .  .  .  .  .  .  }
   232  .  .  .  .  .  .  }
   233  .  .  .  .  .  .  RHS: []ast.Expr (len = 1) {
   234  .  .  .  .  .  .  .  0: *ast.CallExpr {
   235  .  .  .  .  .  .  .  .  Position: ast.Position {}
   236  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
   237  .  .  .  .  .  .  .  .  .  Name: "f2"
   238  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
   239  .  .  .  .  .  .  .  .  }
   240  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   241  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   242  .  .  .  .  .  .  .  .  .  .  Name: "c"
   243  .  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
   244  .  .  .  .  .  .  .  .  .  }
   245  .  .  .  .  .  .  .  .  }
   246  .  .  .  .  .  .  .  }
   247  .  .  .  .  .  .  }
   248  .  .  .  .  .  }
   249  .  .  .  .  .  4: *ast.ReturnStmt {
   250  .  .  .  .  .  .  Position: ast.Position {}
   251  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
   252  .  .  .  .  .  .  .  0: *ast.Ident {
   253  .  .  .  .  .  .  .  .  Name: "res"
   254  .  .  .  .  .  .  .  .  Position: ast.Position {}
   255  .  .  .  .  .  .  .  }
   256  .  .  .  .  .  .  }
   257  .  .  .  .  .  }
   258  .  .  .  .  }
   259  .  .  .  }
   260  .  .  }
   261  .  .  4: *ast.FuncDecl {
   262  .  .  .  Position: ast.Position {}
   263  .  .  .  Name: *ast.Ident {
   264  .  .  .  .  Name: "f4"
   265  .  .  .  .  Position: ast.Position {}
   266  .  .  .  }
   267  .  .  .  Type: *ast.FuncType {
   268  .  .  .  .  Position: ast.Position {}
   269  .  .  .  .  Params: *ast.FieldList {
   270  .  .  .  .  .  Position: ast.Position {}
   271  .  .  .  .  }
   272  .  .  .  }
   273  .  .  .  Body: *ast.BlockStmt {
   274  .  .  .  .  Position: ast.Position {}
   275  .  .  .  .  List: []ast.Stmt (len = 4) {
   276  .  .  .  .  .  0: *ast.AssignStmt {
   277  .  .  .  .  .  .  Position: ast.Position {}
   278  .  .  .  .  .  .  LHS: []ast.Expr (len = 1) {
   279  .  .  .  .  .  .  .  0: *ast.Ident {
   280  .  .  .  .  .  .  .  .  Name: "sum"
   281  .  .  .  .  .  .  .  .  Position: ast.Position {}
   282  .  .  .  .  .  .  .  }
   283  .  .  .  .  .  .  }
   284  .  .  .  .  .  .  RHS: []ast.Expr (len = 1) {
   285  .  .  .  .  .  .  .  0: *ast.FuncLit {
   286  .  .  .  .  .  .  .  .  Position: ast.Position {}
   287  .  .  .  .  .  .  .  .  Type: *ast.FuncType {
   288  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
   289  .  .  .  .  .  .  .  .  .  Params: *ast.FieldList {
   290  .  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
   291  .  .  .  .  .  .  .  .  .  .  List: []*ast.Field (len = 2) {
   292  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Field {
   293  .  .  .  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
   294  .  .  .  .  .  .  .  .  .  .  .  .  Name: *ast.Ident {
   295  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "a"
   296  .  .  .  .  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
   297  .  .  .  .  .  .  .  .  .  .  .  .  }
   298  .  .  .  .  .  .  .  .  .  .  .  }
   299  .  .  .  .  .  .  .  .  .  .  .  1: *ast.Field {
   300  .  .  .  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
   301  .  .  .  .  .  .  .  .  .  .  .  .  Name: *ast.Ident {
   302  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "b"
   303  .  .  .  .  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
   304  .  .  .  .  .  .  .  .  .  .  .  .  }
   305  .  .  .  .  .  .  .  .  .  .  .  }
   306  .  .  .  .  .  .  .  .  .  .  }
   307  .  .  .  .  .  .  .  .  .  }
   308  .  .  .  .  .  .  .  .  }
   309  .  .  .  .  .  .  .  .  Body: *ast.BlockStmt {
   310  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
   311  .  .  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
   312  .  .  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {
   313  .  .  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
   314  .  .  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
   315  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
   316  .  .  .  .  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
   317  .  .  .  .  .  .  .  .  .  .  .  .  .  Left: *ast.Ident {
   318  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "a"
   319  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
   320  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   321  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: "+"
   322  .  .  .  .  .  .  .  .  .  .  .  .  .  Right: *ast.Ident {
   323  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "b"
   324  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
   325  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   326  .  .  .  .  .  .  .  .  .  .  .  .  }
   327  .  .  .  .  .  .  .  .  .  .  .  }
   328  .  .  .  .  .  .  .  .  .  .  }
   329  .  .  .  .  .  .  .  .  .  }
   330  .  .  .  .  .  .  .  .  }
   331  .  .  .  .  .  .  .  }
   332  .  .  .  .  .  .  }
   333  .  .  .  .  .  }
   334  .  .  .  .  .  1: *ast.AssignStmt {
   335  .  .  .  .  .  .  Position: ast.Position {}
   336  .  .  .  .  .  .  LHS: []ast.Expr (len = 1) {
   337  .  .  .  .  .  .  .  0: *ast.Ident {
   338  .  .  .  .  .  .  .  .  Name: "sub"
   339  .  .  .  .  .  .  .  .  Position: ast.Position {}
   340  .  .  .  .  .  .  .  }
   341  .  .  .  .  .  .  }
   342  .  .  .  .  .  .  RHS: []ast.Expr (len = 1) {
   343  .  .  .  .  .  .  .  0: *ast.FuncLit {
   344  .  .  .  .  .  .  .  .  Position: ast.Position {}
   345  .  .  .  .  .  .  .  .  Type: *ast.FuncType {
   346  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
   347  .  .  .  .  .  .  .  .  .  Params: *ast.FieldList {
   348  .  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
   349  .  .  .  .  .  .  .  .  .  .  List: []*ast.Field (len = 2) {
   350  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Field {
   351  .  .  .  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
   352  .  .  .  .  .  .  .  .  .  .  .  .  Name: *ast.Ident {
   353  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "a"
   354  .  .  .  .  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
   355  .  .  .  .  .  .  .  .  .  .  .  .  }
   356  .  .  .  .  .  .  .  .  .  .  .  }
   357  .  .  .  .  .  .  .  .  .  .  .  1: *ast.Field {
   358  .  .  .  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
   359  .  .  .  .  .  .  .  .  .  .  .  .  Name: *ast.Ident {
   360  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "b"
   361  .  .  .  .  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
   362  .  .  .  .  .  .  .  .  .  .  .  .  }
   363  .  .  .  .  .  .  .  .  .  .  .  }
   364  .  .  .  .  .  .  .  .  .  .  }
   365  .  .  .  .  .  .  .  .  .  }
   366  .  .  .  .  .  .  .  .  }
   367  .  .  .  .  .  .  .  .  Body: *ast.BlockStmt {
   368  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
   369  .  .  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
   370  .  .  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {
   371  .  .  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
   372  .  .  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
   373  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
   374  .  .  .  .  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
   375  .  .  .  .  .  .  .  .  .  .  .  .  .  Left: *ast.Ident {
   376  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "a"
   377  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
   378  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   379  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: "-"
   380  .  .  .  .  .  .  .  .  .  .  .  .  .  Right: *ast.Ident {
   381  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "b"
   382  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
   383  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   384  .  .  .  .  .  .  .  .  .  .  .  .  }
   385  .  .  .  .  .  .  .  .  .  .  .  }
   386  .  .  .  .  .  .  .  .  .  .  }
   387  .  .  .  .  .  .  .  .  .  }
   388  .  .  .  .  .  .  .  .  }
   389  .  .  .  .  .  .  .  }
   390  .  .  .  .  .  .  }
   391  .  .  .  .  .  }
   392  .  .  .  .  .  2: *ast.AssignStmt {
   393  .  .  .  .  .  .  Position: ast.Position {}
   394  .  .  .  .  .  .  LHS: []ast.Expr (len = 1) {
   395  .  .  .  .  .  .  .  0: *ast.Ident {
   396  .  .  .  .  .  .  .  .  Name: "result"
   397  .  .  .  .  .  .  .  .  Position: ast.Position {}
   398  .  .  .  .  .  .  .  }
   399  .  .  .  .  .  .  }
   400  .  .  .  .  .  .  RHS: []ast.Expr (len = 1) {
   401  .  .  .  .  .  .  .  0: *ast.CallExpr {
   402  .  .  .  .  .  .  .  .  Position: ast.Position {}
   403  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
   404  .  .  .  .  .  .  .  .  .  Name: "doSomething"
   405  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
   406  .  .  .  .  .  .  .  .  }
   407  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   408  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
   409  .  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
   410  .  .  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
   411  .  .  .  .  .  .  .  .  .  .  .  Name: "sum"
   412  .  .  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
   413  .  .  .  .  .  .  .  .  .  .  }
   414  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
   415  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
   416  .  .  .  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
   417  .  .  .  .  .  .  .  .  .  .  .  .  Kind: "number"
   418  .  .  .  .  .  .  .  .  .  .  .  .  Value: "10"
   419  .  .  .  .  .  .  .  .  .  .  .  }
   420  .  .  .  .  .  .  .  .  .  .  .  1: *ast.BasicLit {
   421  .  .  .  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
   422  .  .  .  .  .  .  .  .  .  .  .  .  Kind: "number"
   423  .  .  .  .  .  .  .  .  .  .  .  .  Value: "20"
   424  .  .  .  .  .  .  .  .  .  .  .  }
   425  .  .  .  .  .  .  .  .  .  .  }
   426  .  .  .  .  .  .  .  .  .  }
   427  .  .  .  .  .  .  .  .  }
   428  .  .  .  .  .  .  .  }
   429  .  .  .  .  .  .  }
   430  .  .  .  .  .  }
   431  .  .  .  .  .  3: *ast.ExprStmt {
   432  .  .  .  .  .  .  Position: ast.Position {}
   433  .  .  .  .  .  .  Expr: *ast.CallExpr {
   434  .  .  .  .  .  .  .  Position: ast.Position {}
   435  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
   436  .  .  .  .  .  .  .  .  Position: ast.Position {}
   437  .  .  .  .  .  .  .  .  Expr: *ast.Ident {
   438  .  .  .  .  .  .  .  .  .  Name: "console"
   439  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
   440  .  .  .  .  .  .  .  .  }
   441  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   442  .  .  .  .  .  .  .  .  .  Name: "log"
   443  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
   444  .  .  .  .  .  .  .  .  }
   445  .  .  .  .  .  .  .  }
   446  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   447  .  .  .  .  .  .  .  .  0: *ast.TemplateExpr {
   448  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
   449  .  .  .  .  .  .  .  .  .  Value: "result: ${result}"
   450  .  .  .  .  .  .  .  .  .  Subs: []ast.Expr (len = 1) {
   451  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   452  .  .  .  .  .  .  .  .  .  .  .  Name: "result"
   453  .  .  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
   454  .  .  .  .  .  .  .  .  .  .  }
   455  .  .  .  .  .  .  .  .  .  }
   456  .  .  .  .  .  .  .  .  }
   457  .  .  .  .  .  .  .  }
   458  .  .  .  .  .  .  }
   459  .  .  .  .  .  }
   460  .  .  .  .  }
   461  .  .  .  }
   462  .  .  }
   463  .  .  5: *ast.FuncDecl {
   464  .  .  .  Position: ast.Position {}
   465  .  .  .  Name: *ast.Ident {
   466  .  .  .  .  Name: "f5"
   467  .  .  .  .  Position: ast.Position {}
   468  .  .  .  }
   469  .  .  .  Type: *ast.FuncType {
   470  .  .  .  .  Position: ast.Position {}
   471  .  .  .  .  Params: *ast.FieldList {
   472  .  .  .  .  .  Position: ast.Position {}
   473  .  .  .  .  .  List: []*ast.Field (len = 1) {
   474  .  .  .  .  .  .  0: *ast.Field {
   475  .  .  .  .  .  .  .  Position: ast.Position {}
   476  .  .  .  .  .  .  .  Name: *ast.Ident {
   477  .  .  .  .  .  .  .  .  Name: "path"
   478  .  .  .  .  .  .  .  .  Position: ast.Position {}
   479  .  .  .  .  .  .  .  }
   480  .  .  .  .  .  .  }
   481  .  .  .  .  .  }
   482  .  .  .  .  }
   483  .  .  .  }
   484  .  .  .  Body: *ast.BlockStmt {
   485  .  .  .  .  Position: ast.Position {}
   486  .  .  .  .  List: []ast.Stmt (len = 1) {
   487  .  .  .  .  .  0: *ast.ExprStmt {
   488  .  .  .  .  .  .  Position: ast.Position {}
   489  .  .  .  .  .  .  Expr: *ast.CallExpr {
   490  .  .  .  .  .  .  .  Position: ast.Position {}
   491  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
   492  .  .  .  .  .  .  .  .  Position: ast.Position {}
   493  .  .  .  .  .  .  .  .  Expr: *ast.Ident {
   494  .  .  .  .  .  .  .  .  .  Name: "fs"
   495  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
   496  .  .  .  .  .  .  .  .  }
   497  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   498  .  .  .  .  .  .  .  .  .  Name: "readFile"
   499  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
   500  .  .  .  .  .  .  .  .  }
   501  .  .  .  .  .  .  .  }
   502  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
   503  .  .  .  .  .  .  .  .  0: *ast.Ident {
   504  .  .  .  .  .  .  .  .  .  Name: "path"
   505  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
   506  .  .  .  .  .  .  .  .  }
   507  .  .  .  .  .  .  .  .  1: *ast.FuncLit {
   508  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
   509  .  .  .  .  .  .  .  .  .  Type: *ast.FuncType {
   510  .  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
   511  .  .  .  .  .  .  .  .  .  .  Params: *ast.FieldList {
   512  .  .  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
   513  .  .  .  .  .  .  .  .  .  .  .  List: []*ast.Field (len = 2) {
   514  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Field {
   515  .  .  .  .  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
   516  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: *ast.Ident {
   517  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "err"
   518  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
   519  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   520  .  .  .  .  .  .  .  .  .  .  .  .  }
   521  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.Field {
   522  .  .  .  .  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
   523  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: *ast.Ident {
   524  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "data"
   525  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
   526  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   527  .  .  .  .  .  .  .  .  .  .  .  .  }
   528  .  .  .  .  .  .  .  .  .  .  .  }
   529  .  .  .  .  .  .  .  .  .  .  }
   530  .  .  .  .  .  .  .  .  .  }
   531  .  .  .  .  .  .  .  .  .  Body: *ast.BlockStmt {
   532  .  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
   533  .  .  .  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
   534  .  .  .  .  .  .  .  .  .  .  .  0: *ast.ExprStmt {
   535  .  .  .  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
   536  .  .  .  .  .  .  .  .  .  .  .  .  Expr: *ast.CallExpr {
   537  .  .  .  .  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
   538  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
   539  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
   540  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Expr: *ast.Ident {
   541  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "console"
   542  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
   543  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   544  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   545  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "log"
   546  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
   547  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   548  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   549  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   550  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   551  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "data"
   552  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
   553  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   554  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   555  .  .  .  .  .  .  .  .  .  .  .  .  }
   556  .  .  .  .  .  .  .  .  .  .  .  }
   557  .  .  .  .  .  .  .  .  .  .  }
   558  .  .  .  .  .  .  .  .  .  }
   559  .  .  .  .  .  .  .  .  }
   560  .  .  .  .  .  .  .  }
   561  .  .  .  .  .  .  }
   562  .  .  .  .  .  }
   563  .  .  .  .  }
   564  .  .  .  }
   565  .  .  }
   566  .  .  6: *ast.FuncDecl {
   567  .  .  .  Position: ast.Position {}
   568  .  .  .  Name: *ast.Ident {
   569  .  .  .  .  Name: "f6"
   570  .  .  .  .  Position: ast.Position {}
   571  .  .  .  }
   572  .  .  .  Type: *ast.FuncType {
   573  .  .  .  .  Position: ast.Position {}
   574  .  .  .  .  Params: *ast.FieldList {
   575  .  .  .  .  .  Position: ast.Position {}
   576  .  .  .  .  }
   577  .  .  .  }
   578  .  .  .  Body: *ast.BlockStmt {
   579  .  .  .  .  Position: ast.Position {}
   580  .  .  .  .  List: []ast.Stmt (len = 2) {
   581  .  .  .  .  .  0: *ast.AssignStmt {
   582  .  .  .  .  .  .  Position: ast.Position {}
   583  .  .  .  .  .  .  LHS: []ast.Expr (len = 1) {
   584  .  .  .  .  .  .  .  0: *ast.Ident {
   585  .  .  .  .  .  .  .  .  Name: "value"
   586  .  .  .  .  .  .  .  .  Position: ast.Position {}
   587  .  .  .  .  .  .  .  }
   588  .  .  .  .  .  .  }
   589  .  .  .  .  .  .  RHS: []ast.Expr (len = 1) {
   590  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
   591  .  .  .  .  .  .  .  .  Position: ast.Position {}
   592  .  .  .  .  .  .  .  .  Left: *ast.CallExpr {
   593  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
   594  .  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
   595  .  .  .  .  .  .  .  .  .  .  Name: "f1"
   596  .  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
   597  .  .  .  .  .  .  .  .  .  }
   598  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
   599  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
   600  .  .  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
   601  .  .  .  .  .  .  .  .  .  .  .  Kind: "number"
   602  .  .  .  .  .  .  .  .  .  .  .  Value: "10"
   603  .  .  .  .  .  .  .  .  .  .  }
   604  .  .  .  .  .  .  .  .  .  .  1: *ast.BasicLit {
   605  .  .  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
   606  .  .  .  .  .  .  .  .  .  .  .  Kind: "number"
   607  .  .  .  .  .  .  .  .  .  .  .  Value: "20"
   608  .  .  .  .  .  .  .  .  .  .  }
   609  .  .  .  .  .  .  .  .  .  }
   610  .  .  .  .  .  .  .  .  }
   611  .  .  .  .  .  .  .  .  Op: "+"
   612  .  .  .  .  .  .  .  .  Right: *ast.CallExpr {
   613  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
   614  .  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
   615  .  .  .  .  .  .  .  .  .  .  Name: "f2"
   616  .  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
   617  .  .  .  .  .  .  .  .  .  }
   618  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   619  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
   620  .  .  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
   621  .  .  .  .  .  .  .  .  .  .  .  Kind: "number"
   622  .  .  .  .  .  .  .  .  .  .  .  Value: "30"
   623  .  .  .  .  .  .  .  .  .  .  }
   624  .  .  .  .  .  .  .  .  .  }
   625  .  .  .  .  .  .  .  .  }
   626  .  .  .  .  .  .  .  }
   627  .  .  .  .  .  .  }
   628  .  .  .  .  .  }
   629  .  .  .  .  .  1: *ast.ReturnStmt {
   630  .  .  .  .  .  .  Position: ast.Position {}
   631  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
   632  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
   633  .  .  .  .  .  .  .  .  Position: ast.Position {}
   634  .  .  .  .  .  .  .  .  Left: *ast.BinaryExpr {
   635  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
   636  .  .  .  .  .  .  .  .  .  Left: *ast.Ident {
   637  .  .  .  .  .  .  .  .  .  .  Name: "value"
   638  .  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
   639  .  .  .  .  .  .  .  .  .  }
   640  .  .  .  .  .  .  .  .  .  Op: "*"
   641  .  .  .  .  .  .  .  .  .  Right: *ast.BasicLit {
   642  .  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
   643  .  .  .  .  .  .  .  .  .  .  Kind: "number"
   644  .  .  .  .  .  .  .  .  .  .  Value: "10"
   645  .  .  .  .  .  .  .  .  .  }
   646  .  .  .  .  .  .  .  .  }
   647  .  .  .  .  .  .  .  .  Op: "/"
   648  .  .  .  .  .  .  .  .  Right: *ast.BasicLit {
   649  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
   650  .  .  .  .  .  .  .  .  .  Kind: "number"
   651  .  .  .  .  .  .  .  .  .  Value: "2"
   652  .  .  .  .  .  .  .  .  }
   653  .  .  .  .  .  .  .  }
   654  .  .  .  .  .  .  }
   655  .  .  .  .  .  }
   656  .  .  .  .  }
   657  .  .  .  }
   658  .  .  }
   659  .  .  7: *ast.ValueDecl {
   660  .  .  .  Position: ast.Position {}
   661  .  .  .  Names: []*ast.Ident (len = 1) {
   662  .  .  .  .  0: *ast.Ident {
   663  .  .  .  .  .  Name: "a"
   664  .  .  .  .  .  Position: ast.Position {}
   665  .  .  .  .  }
   666  .  .  .  }
   667  .  .  .  Values: []ast.Expr (len = 1) {
   668  .  .  .  .  0: *ast.BasicLit {
   669  .  .  .  .  .  Position: ast.Position {}
   670  .  .  .  .  .  Kind: "string"
   671  .  .  .  .  .  Value: "x"
   672  .  .  .  .  }
   673  .  .  .  }
   674  .  .  }
   675  .  .  8: *ast.FuncDecl {
   676  .  .  .  Position: ast.Position {}
   677  .  .  .  Name: *ast.Ident {
   678  .  .  .  .  Name: "f7"
   679  .  .  .  .  Position: ast.Position {}
   680  .  .  .  }
   681  .  .  .  Type: *ast.FuncType {
   682  .  .  .  .  Position: ast.Position {}
   683  .  .  .  .  Params: *ast.FieldList {
   684  .  .  .  .  .  Position: ast.Position {}
   685  .  .  .  .  .  List: []*ast.Field (len = 1) {
   686  .  .  .  .  .  .  0: *ast.Field {
   687  .  .  .  .  .  .  .  Position: ast.Position {}
   688  .  .  .  .  .  .  .  Name: *ast.Ident {
   689  .  .  .  .  .  .  .  .  Name: "b"
   690  .  .  .  .  .  .  .  .  Position: ast.Position {}
   691  .  .  .  .  .  .  .  }
   692  .  .  .  .  .  .  }
   693  .  .  .  .  .  }
   694  .  .  .  .  }
   695  .  .  .  }
   696  .  .  .  Body: *ast.BlockStmt {
   697  .  .  .  .  Position: ast.Position {}
   698  .  .  .  .  List: []ast.Stmt (len = 6) {
   699  .  .  .  .  .  0: *ast.AssignStmt {
   700  .  .  .  .  .  .  Position: ast.Position {}
   701  .  .  .  .  .  .  LHS: []ast.Expr (len = 1) {
   702  .  .  .  .  .  .  .  0: *ast.Ident {
   703  .  .  .  .  .  .  .  .  Name: "c"
   704  .  .  .  .  .  .  .  .  Position: ast.Position {}
   705  .  .  .  .  .  .  .  }
   706  .  .  .  .  .  .  }
   707  .  .  .  .  .  .  RHS: []ast.Expr (len = 1) {
   708  .  .  .  .  .  .  .  0: *ast.BasicLit {
   709  .  .  .  .  .  .  .  .  Position: ast.Position {}
   710  .  .  .  .  .  .  .  .  Kind: "string"
   711  .  .  .  .  .  .  .  .  Value: "y"
   712  .  .  .  .  .  .  .  }
   713  .  .  .  .  .  .  }
   714  .  .  .  .  .  }
   715  .  .  .  .  .  1: *ast.AssignStmt {
   716  .  .  .  .  .  .  Position: ast.Position {}
   717  .  .  .  .  .  .  LHS: []ast.Expr (len = 1) {
   718  .  .  .  .  .  .  .  0: *ast.Ident {
   719  .  .  .  .  .  .  .  .  Name: "d"
   720  .  .  .  .  .  .  .  .  Position: ast.Position {}
   721  .  .  .  .  .  .  .  }
   722  .  .  .  .  .  .  }
   723  .  .  .  .  .  .  RHS: []ast.Expr (len = 1) {
   724  .  .  .  .  .  .  .  0: *ast.Ident {
   725  .  .  .  .  .  .  .  .  Name: "c"
   726  .  .  .  .  .  .  .  .  Position: ast.Position {}
   727  .  .  .  .  .  .  .  }
   728  .  .  .  .  .  .  }
   729  .  .  .  .  .  }
   730  .  .  .  .  .  2: *ast.AssignStmt {
   731  .  .  .  .  .  .  Position: ast.Position {}
   732  .  .  .  .  .  .  LHS: []ast.Expr (len = 1) {
   733  .  .  .  .  .  .  .  0: *ast.Ident {
   734  .  .  .  .  .  .  .  .  Name: "e"
   735  .  .  .  .  .  .  .  .  Position: ast.Position {}
   736  .  .  .  .  .  .  .  }
   737  .  .  .  .  .  .  }
   738  .  .  .  .  .  .  RHS: []ast.Expr (len = 1) {
   739  .  .  .  .  .  .  .  0: *ast.Ident {
   740  .  .  .  .  .  .  .  .  Name: "d"
   741  .  .  .  .  .  .  .  .  Position: ast.Position {}
   742  .  .  .  .  .  .  .  }
   743  .  .  .  .  .  .  }
   744  .  .  .  .  .  }
   745  .  .  .  .  .  3: *ast.AssignStmt {
   746  .  .  .  .  .  .  Position: ast.Position {}
   747  .  .  .  .  .  .  LHS: []ast.Expr (len = 1) {
   748  .  .  .  .  .  .  .  0: *ast.Ident {
   749  .  .  .  .  .  .  .  .  Name: "f"
   750  .  .  .  .  .  .  .  .  Position: ast.Position {}
   751  .  .  .  .  .  .  .  }
   752  .  .  .  .  .  .  }
   753  .  .  .  .  .  .  RHS: []ast.Expr (len = 1) {
   754  .  .  .  .  .  .  .  0: *ast.Ident {
   755  .  .  .  .  .  .  .  .  Name: "a"
   756  .  .  .  .  .  .  .  .  Position: ast.Position {}
   757  .  .  .  .  .  .  .  }
   758  .  .  .  .  .  .  }
   759  .  .  .  .  .  }
   760  .  .  .  .  .  4: *ast.AssignStmt {
   761  .  .  .  .  .  .  Position: ast.Position {}
   762  .  .  .  .  .  .  LHS: []ast.Expr (len = 1) {
   763  .  .  .  .  .  .  .  0: *ast.Ident {
   764  .  .  .  .  .  .  .  .  Name: "g"
   765  .  .  .  .  .  .  .  .  Position: ast.Position {}
   766  .  .  .  .  .  .  .  }
   767  .  .  .  .  .  .  }
   768  .  .  .  .  .  .  RHS: []ast.Expr (len = 1) {
   769  .  .  .  .  .  .  .  0: *ast.Ident {
   770  .  .  .  .  .  .  .  .  Name: "f"
   771  .  .  .  .  .  .  .  .  Position: ast.Position {}
   772  .  .  .  .  .  .  .  }
   773  .  .  .  .  .  .  }
   774  .  .  .  .  .  }
   775  .  .  .  .  .  5: *ast.AssignStmt {
   776  .  .  .  .  .  .  Position: ast.Position {}
   777  .  .  .  .  .  .  LHS: []ast.Expr (len = 1) {
   778  .  .  .  .  .  .  .  0: *ast.Ident {
   779  .  .  .  .  .  .  .  .  Name: "h"
   780  .  .  .  .  .  .  .  .  Position: ast.Position {}
   781  .  .  .  .  .  .  .  }
   782  .  .  .  .  .  .  }
   783  .  .  .  .  .  .  RHS: []ast.Expr (len = 1) {
   784  .  .  .  .  .  .  .  0: *ast.Ident {
   785  .  .  .  .  .  .  .  .  Name: "b"
   786  .  .  .  .  .  .  .  .  Position: ast.Position {}
   787  .  .  .  .  .  .  .  }
   788  .  .  .  .  .  .  }
   789  .  .  .  .  .  }
   790  .  .  .  .  }
   791  .  .  .  }
   792  .  .  }
   793  .  .  9: *ast.FuncDecl {
   794  .  .  .  Position: ast.Position {}
   795  .  .  .  Name: *ast.Ident {
   796  .  .  .  .  Name: "f8"
   797  .  .  .  .  Position: ast.Position {}
   798  .  .  .  }
   799  .  .  .  Type: *ast.FuncType {
   800  .  .  .  .  Position: ast.Position {}
   801  .  .  .  .  Params: *ast.FieldList {
   802  .  .  .  .  .  Position: ast.Position {}
   803  .  .  .  .  .  List: []*ast.Field (len = 1) {
   804  .  .  .  .  .  .  0: *ast.Field {
   805  .  .  .  .  .  .  .  Position: ast.Position {}
   806  .  .  .  .  .  .  .  Name: *ast.Ident {
   807  .  .  .  .  .  .  .  .  Name: "a"
   808  .  .  .  .  .  .  .  .  Position: ast.Position {}
   809  .  .  .  .  .  .  .  }
   810  .  .  .  .  .  .  }
   811  .  .  .  .  .  }
   812  .  .  .  .  }
   813  .  .  .  }
   814  .  .  .  Body: *ast.BlockStmt {
   815  .  .  .  .  Position: ast.Position {}
   816  .  .  .  .  List: []ast.Stmt (len = 2) {
   817  .  .  .  .  .  0: *ast.AssignStmt {
   818  .  .  .  .  .  .  Position: ast.Position {}
   819  .  .  .  .  .  .  LHS: []ast.Expr (len = 1) {
   820  .  .  .  .  .  .  .  0: *ast.Ident {
   821  .  .  .  .  .  .  .  .  Name: "b"
   822  .  .  .  .  .  .  .  .  Position: ast.Position {}
   823  .  .  .  .  .  .  .  }
   824  .  .  .  .  .  .  }
   825  .  .  .  .  .  .  RHS: []ast.Expr (len = 1) {
   826  .  .  .  .  .  .  .  0: *ast.Ident {
   827  .  .  .  .  .  .  .  .  Name: "a"
   828  .  .  .  .  .  .  .  .  Position: ast.Position {}
   829  .  .  .  .  .  .  .  }
   830  .  .  .  .  .  .  }
   831  .  .  .  .  .  }
   832  .  .  .  .  .  1: *ast.AssignStmt {
   833  .  .  .  .  .  .  Position: ast.Position {}
   834  .  .  .  .  .  .  LHS: []ast.Expr (len = 1) {
   835  .  .  .  .  .  .  .  0: *ast.Ident {
   836  .  .  .  .  .  .  .  .  Name: "c"
   837  .  .  .  .  .  .  .  .  Position: ast.Position {}
   838  .  .  .  .  .  .  .  }
   839  .  .  .  .  .  .  }
   840  .  .  .  .  .  .  RHS: []ast.Expr (len = 1) {
   841  .  .  .  .  .  .  .  0: *ast.Ident {
   842  .  .  .  .  .  .  .  .  Name: "b"
   843  .  .  .  .  .  .  .  .  Position: ast.Position {}
   844  .  .  .  .  .  .  .  }
   845  .  .  .  .  .  .  }
   846  .  .  .  .  .  }
   847  .  .  .  .  }
   848  .  .  .  }
   849  .  .  }
   850  .  }
   851  }
