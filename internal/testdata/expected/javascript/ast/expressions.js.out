     0  *ast.File {
     1  .  Position: ast.Position {}
     2  .  Name: *ast.Ident {
     3  .  .  Name: "expressions.js"
     4  .  .  Position: ast.Position {}
     5  .  }
     6  .  Decls: []ast.Decl (len = 3) {
     7  .  .  0: *ast.ImportDecl {
     8  .  .  .  Position: ast.Position {}
     9  .  .  .  Name: *ast.Ident {
    10  .  .  .  .  Name: "express"
    11  .  .  .  .  Position: ast.Position {}
    12  .  .  .  }
    13  .  .  .  Path: *ast.Ident {
    14  .  .  .  .  Name: "express"
    15  .  .  .  .  Position: ast.Position {}
    16  .  .  .  }
    17  .  .  }
    18  .  .  1: *ast.ValueDecl {
    19  .  .  .  Position: ast.Position {}
    20  .  .  .  Names: []*ast.Ident (len = 1) {
    21  .  .  .  .  0: *ast.Ident {
    22  .  .  .  .  .  Name: "app"
    23  .  .  .  .  .  Position: ast.Position {}
    24  .  .  .  .  }
    25  .  .  .  }
    26  .  .  .  Values: []ast.Expr (len = 1) {
    27  .  .  .  .  0: *ast.CallExpr {
    28  .  .  .  .  .  Position: ast.Position {}
    29  .  .  .  .  .  Fun: *ast.Ident {
    30  .  .  .  .  .  .  Name: "express"
    31  .  .  .  .  .  .  Position: ast.Position {}
    32  .  .  .  .  .  }
    33  .  .  .  .  .  Args: []ast.Expr (len = 0) {}
    34  .  .  .  .  }
    35  .  .  .  }
    36  .  .  }
    37  .  .  2: *ast.FuncDecl {
    38  .  .  .  Position: ast.Position {}
    39  .  .  .  Name: *ast.Ident {
    40  .  .  .  .  Name: "incrementExpr"
    41  .  .  .  .  Position: ast.Position {}
    42  .  .  .  }
    43  .  .  .  Type: *ast.FuncType {
    44  .  .  .  .  Position: ast.Position {}
    45  .  .  .  .  Params: *ast.FieldList {
    46  .  .  .  .  .  Position: ast.Position {}
    47  .  .  .  .  }
    48  .  .  .  }
    49  .  .  .  Body: *ast.BlockStmt {
    50  .  .  .  .  Position: ast.Position {}
    51  .  .  .  .  List: []ast.Stmt (len = 4) {
    52  .  .  .  .  .  0: *ast.AssignStmt {
    53  .  .  .  .  .  .  Position: ast.Position {}
    54  .  .  .  .  .  .  LHS: []ast.Expr (len = 1) {
    55  .  .  .  .  .  .  .  0: *ast.Ident {
    56  .  .  .  .  .  .  .  .  Name: "a"
    57  .  .  .  .  .  .  .  .  Position: ast.Position {}
    58  .  .  .  .  .  .  .  }
    59  .  .  .  .  .  .  }
    60  .  .  .  .  .  .  RHS: []ast.Expr (len = 1) {
    61  .  .  .  .  .  .  .  0: *ast.BasicLit {
    62  .  .  .  .  .  .  .  .  Position: ast.Position {}
    63  .  .  .  .  .  .  .  .  Kind: "number"
    64  .  .  .  .  .  .  .  .  Value: "0"
    65  .  .  .  .  .  .  .  }
    66  .  .  .  .  .  .  }
    67  .  .  .  .  .  }
    68  .  .  .  .  .  1: *ast.ExprStmt {
    69  .  .  .  .  .  .  Position: ast.Position {}
    70  .  .  .  .  .  .  Expr: *ast.IncExpr {
    71  .  .  .  .  .  .  .  Position: ast.Position {}
    72  .  .  .  .  .  .  .  Op: "++"
    73  .  .  .  .  .  .  .  Arg: *ast.Ident {
    74  .  .  .  .  .  .  .  .  Name: "a"
    75  .  .  .  .  .  .  .  .  Position: ast.Position {}
    76  .  .  .  .  .  .  .  }
    77  .  .  .  .  .  .  }
    78  .  .  .  .  .  }
    79  .  .  .  .  .  2: *ast.ExprStmt {
    80  .  .  .  .  .  .  Position: ast.Position {}
    81  .  .  .  .  .  .  Expr: *ast.IncExpr {
    82  .  .  .  .  .  .  .  Position: ast.Position {}
    83  .  .  .  .  .  .  .  Op: "--"
    84  .  .  .  .  .  .  .  Arg: *ast.Ident {
    85  .  .  .  .  .  .  .  .  Name: "a"
    86  .  .  .  .  .  .  .  .  Position: ast.Position {}
    87  .  .  .  .  .  .  .  }
    88  .  .  .  .  .  .  }
    89  .  .  .  .  .  }
    90  .  .  .  .  .  3: *ast.ReturnStmt {
    91  .  .  .  .  .  .  Position: ast.Position {}
    92  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
    93  .  .  .  .  .  .  .  0: *ast.Ident {
    94  .  .  .  .  .  .  .  .  Name: "a"
    95  .  .  .  .  .  .  .  .  Position: ast.Position {}
    96  .  .  .  .  .  .  .  }
    97  .  .  .  .  .  .  }
    98  .  .  .  .  .  }
    99  .  .  .  .  }
   100  .  .  .  }
   101  .  .  }
   102  .  }
   103  .  Exprs: []ast.Expr (len = 3) {
   104  .  .  0: *ast.CallExpr {
   105  .  .  .  Position: ast.Position {}
   106  .  .  .  Fun: *ast.SelectorExpr {
   107  .  .  .  .  Position: ast.Position {}
   108  .  .  .  .  Expr: *ast.Ident {
   109  .  .  .  .  .  Name: "console"
   110  .  .  .  .  .  Position: ast.Position {}
   111  .  .  .  .  }
   112  .  .  .  .  Sel: *ast.Ident {
   113  .  .  .  .  .  Name: "log"
   114  .  .  .  .  .  Position: ast.Position {}
   115  .  .  .  .  }
   116  .  .  .  }
   117  .  .  .  Args: []ast.Expr (len = 1) {
   118  .  .  .  .  0: *ast.BasicLit {
   119  .  .  .  .  .  Position: ast.Position {}
   120  .  .  .  .  .  Kind: "string"
   121  .  .  .  .  .  Value: "testing"
   122  .  .  .  .  }
   123  .  .  .  }
   124  .  .  }
   125  .  .  1: *ast.CallExpr {
   126  .  .  .  Position: ast.Position {}
   127  .  .  .  Fun: *ast.SelectorExpr {
   128  .  .  .  .  Position: ast.Position {}
   129  .  .  .  .  Expr: *ast.Ident {
   130  .  .  .  .  .  Name: "app"
   131  .  .  .  .  .  Position: ast.Position {}
   132  .  .  .  .  }
   133  .  .  .  .  Sel: *ast.Ident {
   134  .  .  .  .  .  Name: "get"
   135  .  .  .  .  .  Position: ast.Position {}
   136  .  .  .  .  }
   137  .  .  .  }
   138  .  .  .  Args: []ast.Expr (len = 2) {
   139  .  .  .  .  0: *ast.BasicLit {
   140  .  .  .  .  .  Position: ast.Position {}
   141  .  .  .  .  .  Kind: "string"
   142  .  .  .  .  .  Value: "/"
   143  .  .  .  .  }
   144  .  .  .  .  1: *ast.FuncLit {
   145  .  .  .  .  .  Position: ast.Position {}
   146  .  .  .  .  .  Type: *ast.FuncType {
   147  .  .  .  .  .  .  Position: ast.Position {}
   148  .  .  .  .  .  .  Params: *ast.FieldList {
   149  .  .  .  .  .  .  .  Position: ast.Position {}
   150  .  .  .  .  .  .  .  List: []*ast.Field (len = 2) {
   151  .  .  .  .  .  .  .  .  0: *ast.Field {
   152  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
   153  .  .  .  .  .  .  .  .  .  Name: *ast.Ident {
   154  .  .  .  .  .  .  .  .  .  .  Name: "req"
   155  .  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
   156  .  .  .  .  .  .  .  .  .  }
   157  .  .  .  .  .  .  .  .  }
   158  .  .  .  .  .  .  .  .  1: *ast.Field {
   159  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
   160  .  .  .  .  .  .  .  .  .  Name: *ast.Ident {
   161  .  .  .  .  .  .  .  .  .  .  Name: "res"
   162  .  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
   163  .  .  .  .  .  .  .  .  .  }
   164  .  .  .  .  .  .  .  .  }
   165  .  .  .  .  .  .  .  }
   166  .  .  .  .  .  .  }
   167  .  .  .  .  .  }
   168  .  .  .  .  .  Body: *ast.BlockStmt {
   169  .  .  .  .  .  .  Position: ast.Position {}
   170  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
   171  .  .  .  .  .  .  .  0: *ast.ExprStmt {
   172  .  .  .  .  .  .  .  .  Position: ast.Position {}
   173  .  .  .  .  .  .  .  .  Expr: *ast.CallExpr {
   174  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
   175  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
   176  .  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
   177  .  .  .  .  .  .  .  .  .  .  Expr: *ast.Ident {
   178  .  .  .  .  .  .  .  .  .  .  .  Name: "console"
   179  .  .  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
   180  .  .  .  .  .  .  .  .  .  .  }
   181  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   182  .  .  .  .  .  .  .  .  .  .  .  Name: "log"
   183  .  .  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
   184  .  .  .  .  .  .  .  .  .  .  }
   185  .  .  .  .  .  .  .  .  .  }
   186  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
   187  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   188  .  .  .  .  .  .  .  .  .  .  .  Name: "req"
   189  .  .  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
   190  .  .  .  .  .  .  .  .  .  .  }
   191  .  .  .  .  .  .  .  .  .  .  1: *ast.Ident {
   192  .  .  .  .  .  .  .  .  .  .  .  Name: "res"
   193  .  .  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
   194  .  .  .  .  .  .  .  .  .  .  }
   195  .  .  .  .  .  .  .  .  .  }
   196  .  .  .  .  .  .  .  .  }
   197  .  .  .  .  .  .  .  }
   198  .  .  .  .  .  .  }
   199  .  .  .  .  .  }
   200  .  .  .  .  }
   201  .  .  .  }
   202  .  .  }
   203  .  .  2: *ast.CallExpr {
   204  .  .  .  Position: ast.Position {}
   205  .  .  .  Fun: *ast.SelectorExpr {
   206  .  .  .  .  Position: ast.Position {}
   207  .  .  .  .  Expr: *ast.Ident {
   208  .  .  .  .  .  Name: "app"
   209  .  .  .  .  .  Position: ast.Position {}
   210  .  .  .  .  }
   211  .  .  .  .  Sel: *ast.Ident {
   212  .  .  .  .  .  Name: "set"
   213  .  .  .  .  .  Position: ast.Position {}
   214  .  .  .  .  }
   215  .  .  .  }
   216  .  .  .  Args: []ast.Expr (len = 2) {
   217  .  .  .  .  0: *ast.BasicLit {
   218  .  .  .  .  .  Position: ast.Position {}
   219  .  .  .  .  .  Kind: "string"
   220  .  .  .  .  .  Value: "/"
   221  .  .  .  .  }
   222  .  .  .  .  1: *ast.FuncLit {
   223  .  .  .  .  .  Position: ast.Position {}
   224  .  .  .  .  .  Type: *ast.FuncType {
   225  .  .  .  .  .  .  Position: ast.Position {}
   226  .  .  .  .  .  .  Params: *ast.FieldList {
   227  .  .  .  .  .  .  .  Position: ast.Position {}
   228  .  .  .  .  .  .  .  List: []*ast.Field (len = 2) {
   229  .  .  .  .  .  .  .  .  0: *ast.Field {
   230  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
   231  .  .  .  .  .  .  .  .  .  Name: *ast.Ident {
   232  .  .  .  .  .  .  .  .  .  .  Name: "req"
   233  .  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
   234  .  .  .  .  .  .  .  .  .  }
   235  .  .  .  .  .  .  .  .  }
   236  .  .  .  .  .  .  .  .  1: *ast.Field {
   237  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
   238  .  .  .  .  .  .  .  .  .  Name: *ast.Ident {
   239  .  .  .  .  .  .  .  .  .  .  Name: "res"
   240  .  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
   241  .  .  .  .  .  .  .  .  .  }
   242  .  .  .  .  .  .  .  .  }
   243  .  .  .  .  .  .  .  }
   244  .  .  .  .  .  .  }
   245  .  .  .  .  .  }
   246  .  .  .  .  .  Body: *ast.BlockStmt {
   247  .  .  .  .  .  .  Position: ast.Position {}
   248  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
   249  .  .  .  .  .  .  .  0: *ast.ExprStmt {
   250  .  .  .  .  .  .  .  .  Position: ast.Position {}
   251  .  .  .  .  .  .  .  .  Expr: *ast.CallExpr {
   252  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
   253  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
   254  .  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
   255  .  .  .  .  .  .  .  .  .  .  Expr: *ast.Ident {
   256  .  .  .  .  .  .  .  .  .  .  .  Name: "console"
   257  .  .  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
   258  .  .  .  .  .  .  .  .  .  .  }
   259  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   260  .  .  .  .  .  .  .  .  .  .  .  Name: "log"
   261  .  .  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
   262  .  .  .  .  .  .  .  .  .  .  }
   263  .  .  .  .  .  .  .  .  .  }
   264  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
   265  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   266  .  .  .  .  .  .  .  .  .  .  .  Name: "req"
   267  .  .  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
   268  .  .  .  .  .  .  .  .  .  .  }
   269  .  .  .  .  .  .  .  .  .  .  1: *ast.Ident {
   270  .  .  .  .  .  .  .  .  .  .  .  Name: "res"
   271  .  .  .  .  .  .  .  .  .  .  .  Position: ast.Position {}
   272  .  .  .  .  .  .  .  .  .  .  }
   273  .  .  .  .  .  .  .  .  .  }
   274  .  .  .  .  .  .  .  .  }
   275  .  .  .  .  .  .  .  }
   276  .  .  .  .  .  .  }
   277  .  .  .  .  .  }
   278  .  .  .  .  }
   279  .  .  .  }
   280  .  .  }
   281  .  }
   282  }
