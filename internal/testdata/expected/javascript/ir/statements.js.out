file statements.js:
  func  ExportStatement                             ()
  func  ForInStatement                              ()
  func  ForStatement                                ()
  func  ForStatementEmptyBody                       ()
  func  ForStatementEndlessRecursion                ()
  func  ForStatementIteratingOverList               (data)
  func  ForStatementWithoutBinaryExpressionIncremet ()
  func  IfStatement                                 (a, b)
  func  LabeledForStatement                         ()
  func  LabeledWhileStatement                       ()
  func  NestedForStatement                          ()
  func  SwitchStatement                             ()
  func  SwitchStatementJustOneCaseAndDefault        ()
  func  SwitchStatementOnlyDefault                  ()
  func  SwitchStatementOnlyOneCase                  ()
  func  SwitchStatementWithBadNode                  ()
  func  SwitchStatementWithBadNodesAndDefault       ()
  func  SwitchStatementWithoutDefault               ()
  func  TryStatement                                ()
  func  TryStatementWithoutCatch                    ()
  func  TryStatementWithoutFinally                  ()
  func  WhileStatement                              ()



============================

# Name: ExportStatement
# File: statements.js
# Location: statements.js:297:0
func ExportStatement():
0:                                                                         entry

# Name: ForInStatement
# File: statements.js
# Location: statements.js:289:0
# Locals:
#   0:	values
func ForInStatement():
0:                                                                         entry
	%t0 = array["a","b","c"]

# Name: ForStatement
# File: statements.js
# Location: statements.js:255:0
# Locals:
#   0:	i
#   1:	i
#   2:	i
func ForStatement():
0:                                                                         entry
	jump 2
1:                                                                      for.body
	%t3 = %t1 + "1"
	%t4 = console.log(%t3)
	jump 2
2:                                                                      for.loop
	%t0 = "0"
	%t1 = phi [2: %t0, 1: %t3] #i
	%t2 = %t1 < "9"
	if %t2 goto 1 else 3
3:                                                                      for.done

# Name: ForStatementEmptyBody
# File: statements.js
# Location: statements.js:282:0
# Locals:
#   0:	i
#   1:	i
#   2:	i
func ForStatementEmptyBody():
0:                                                                         entry
	jump 2
1:                                                                      for.body
	%t3 = %t1 + "1"
	jump 2
2:                                                                      for.loop
	%t0 = "0"
	%t1 = phi [2: %t0, 1: %t3] #i
	%t2 = %t1 < l
	if %t2 goto 1 else 3
3:                                                                      for.done

# Name: ForStatementEndlessRecursion
# File: statements.js
# Location: statements.js:276:0
func ForStatementEndlessRecursion():
0:                                                                         entry
	jump 1
1:                                                                      for.body
	%t0 = console.log("endless recursion")
	jump 1
2:                                                                      for.done

# Name: ForStatementIteratingOverList
# File: statements.js
# Location: statements.js:262:0
# Locals:
#   0:	i
#   1:	i
#   2:	i
#   3:	sum
func ForStatementIteratingOverList(data):
0:                                                                         entry
	%t0 = "0"
	jump 2
1:                                                                      for.body
	%t4 = %t2 + "1"
	jump 2
2:                                                                      for.loop
	%t1 = "0"
	%t2 = phi [2: %t1, 1: %t4] #i
	%t3 = %t2 < data.length
	if %t3 goto 1 else 3
3:                                                                      for.done
	return %t0
4:                                                                   unreachable

# Name: ForStatementWithoutBinaryExpressionIncremet
# File: statements.js
# Location: statements.js:271:0
func ForStatementWithoutBinaryExpressionIncremet():
0:                                                                         entry
	jump 2
1:                                                                      for.body
	jump 2
2:                                                                      for.loop
	if c goto 1 else 3
3:                                                                      for.done

# Name: IfStatement
# File: statements.js
# Location: statements.js:17:0
# Locals:
#   0:	a
#   1:	a
#   2:	a
#   3:	c
func IfStatement(a, b):
0:                                                                         entry
	%t0 = a >= "10"
	if %t0 goto 1 else 3
1:                                                                       if.then
	%t1 = b * "2"
	jump 2
2:                                                                       if.done
	%t7 = phi [1: %t1, 4: %t3, 6: %t4] #a
	return %t7
3:                                                                       if.else
	%t2 = a <= "5"
	if %t2 goto 4 else 6
4:                                                                       if.then
	%t3 = b + a
	jump 5
5:                                                                       if.done
	jump 2
6:                                                                       if.else
	%t4 = a + b
	%t5 = %t4 * "10"
	%t6 = console.log(%t5)
	jump 5
7:                                                                   unreachable

# Name: LabeledForStatement
# File: statements.js
# Location: statements.js:107:0
# Locals:
#   0:	i
#   1:	i
#   2:	i
#   3:	j
#   4:	j
#   5:	j
func LabeledForStatement():
0:                                                                         entry
	jump 1
1:                                                                         outer
	jump 3
2:                                                                      for.body
	%t3 = %t1 + "1"
	jump 6
3:                                                                      for.loop
	%t0 = "0"
	%t1 = phi [3: %t0, 2: %t3] #i
	%t2 = %t1 < "20"
	if %t2 goto 2 else 4
4:                                                                      for.done
5:                                                                      for.body
	%t7 = %t5 + "1"
	%t8 = %t7 == %t3
	if %t8 goto 8 else 9
6:                                                                      for.loop
	%t4 = "0"
	%t5 = phi [6: %t4, 5: %t7] #j
	%t6 = %t5 < "10"
	if %t6 goto 5 else 7
7:                                                                      for.done
	%t11 = %t3 % "2"
	%t12 = %t11 === "0"
	if %t12 goto 14 else 15
8:                                                                       if.then
	jump 3
9:                                                                       if.done
	%t9 = %t7 / "5"
	%t10 = %t9 > "2"
	if %t10 goto 11 else 12
10:                                                                  unreachable
	jump 9
11:                                                                      if.then
	jump 7
12:                                                                      if.done
	jump 6
13:                                                                  unreachable
	jump 12
14:                                                                      if.then
	jump 4
15:                                                                      if.done
	jump 3
16:                                                                  unreachable
	jump 15

# Name: LabeledWhileStatement
# File: statements.js
# Location: statements.js:91:0
# Locals:
#   0:	x
#   1:	x
func LabeledWhileStatement():
0:                                                                         entry
	%t0 = "0"
	jump 1
1:                                                                     whileStmt
	jump 3
2:                                                                    while.body
	%t2 = console.log("test")
	%t3 = i === "4"
	if %t3 goto 5 else 6
3:                                                                    while.cond
	%t1 = %t0 <= "5"
	if %t1 goto 2 else 4
4:                                                                    while.done
5:                                                                       if.then
	%t4 = console.log("finish")
	jump 4
6:                                                                       if.done
	%t5 = i === "2"
	if %t5 goto 8 else 9
7:                                                                   unreachable
	jump 6
8:                                                                       if.then
	%t6 = console.log("two")
	jump 3
9:                                                                       if.done
	%t7 = %t0 + "1"
	jump 3
10:                                                                  unreachable
	jump 9

# Name: NestedForStatement
# File: statements.js
# Location: statements.js:124:0
# Locals:
#   0:	i
#   1:	i
#   2:	i
#   3:	j
#   4:	j
#   5:	j
func NestedForStatement():
0:                                                                         entry
	jump 2
1:                                                                      for.body
	%t3 = %t1 + "1"
	jump 5
2:                                                                      for.loop
	%t0 = "0"
	%t1 = phi [2: %t0, 1: %t3] #i
	%t2 = %t1 < "20"
	if %t2 goto 1 else 3
3:                                                                      for.done
4:                                                                      for.body
	%t7 = %t5 + "1"
	%t8 = %t7 == %t3
	if %t8 goto 7 else 8
5:                                                                      for.loop
	%t4 = "0"
	%t5 = phi [5: %t4, 4: %t7] #j
	%t6 = %t5 < "10"
	if %t6 goto 4 else 6
6:                                                                      for.done
	%t11 = %t3 % "2"
	%t12 = %t11 === "0"
	if %t12 goto 13 else 14
7:                                                                       if.then
	jump 5
8:                                                                       if.done
	%t9 = %t7 / "5"
	%t10 = %t9 > "2"
	if %t10 goto 10 else 11
9:                                                                   unreachable
	jump 8
10:                                                                      if.then
	jump 6
11:                                                                      if.done
	jump 5
12:                                                                  unreachable
	jump 11
13:                                                                      if.then
	jump 3
14:                                                                      if.done
	jump 2
15:                                                                  unreachable
	jump 14

# Name: SwitchStatement
# File: statements.js
# Location: statements.js:141:0
# Locals:
#   0:	fruits
func SwitchStatement():
0:                                                                         entry
	%t0 = console.log("switch entry")
	%t1 = "Oranges"
	%t2 = %t1 == "Oranges"
	if %t2 goto 2 else 3
1:                                                                       if.done
	%t9 = console.log("switch done")
2:                                                                       if.then
	%t3 = console.log("switch case 1")
	jump 1
3:                                                                       if.done
	%t4 = %t1 == "Mangoes"
	if %t4 goto 4 else 5
4:                                                                       if.then
	%t5 = console.log("switch case 2")
	jump 1
5:                                                                       if.done
	%t6 = %t1 == "Papayas"
	if %t6 goto 6 else 7
6:                                                                       if.then
	%t7 = console.log("switch case 3")
	jump 1
7:                                                                       if.done
	jump 8
8:                                                                       if.else
	%t8 = console.log("switch case default")
	jump 1

# Name: SwitchStatementJustOneCaseAndDefault
# File: statements.js
# Location: statements.js:241:0
# Locals:
#   0:	foo
func SwitchStatementJustOneCaseAndDefault():
0:                                                                         entry
	%t0 = console.log("switch entry")
	%t1 = "2"
	%t2 = %t1 == "1"
	if %t2 goto 2 else 3
1:                                                                       if.done
	%t5 = console.log("switch done")
2:                                                                       if.then
	%t3 = console.log("switch case 1")
	jump 1
3:                                                                       if.done
	jump 4
4:                                                                       if.else
	%t4 = console.log("switch case default")
	jump 1

# Name: SwitchStatementOnlyDefault
# File: statements.js
# Location: statements.js:181:0
# Locals:
#   0:	fruits
func SwitchStatementOnlyDefault():
0:                                                                         entry
	%t0 = console.log("switch entry")
	%t1 = "Oranges"
	jump 2
1:                                                                       if.done
	%t3 = console.log("switch done")
2:                                                                       if.else
	%t2 = console.log("switch case default")
	jump 1

# Name: SwitchStatementOnlyOneCase
# File: statements.js
# Location: statements.js:194:0
# Locals:
#   0:	fruits
func SwitchStatementOnlyOneCase():
0:                                                                         entry
	%t0 = console.log("switch entry")
	%t1 = "Oranges"
	%t2 = %t1 == "Oranges"
	if %t2 goto 2 else 1
1:                                                                       if.done
	%t4 = console.log("switch done")
2:                                                                       if.then
	%t3 = console.log("switch case 1")
	jump 1

# Name: SwitchStatementWithBadNode
# File: statements.js
# Location: statements.js:222:0
# Locals:
#   0:	fruits
func SwitchStatementWithBadNode():
0:                                                                         entry
	%t0 = console.log("switch entry")
	%t1 = "Oranges"
	%t2 = %t1 == "Mangoes"
	if %t2 goto 2 else 3
1:                                                                       if.done
	%t6 = console.log("switch done")
2:                                                                       if.then
	%t3 = console.log("switch case 2")
	jump 1
3:                                                                       if.done
	%t4 = %t1 == "Papayas"
	if %t4 goto 4 else 1
4:                                                                       if.then
	%t5 = console.log("switch case 3")
	jump 1

# Name: SwitchStatementWithBadNodesAndDefault
# File: statements.js
# Location: statements.js:207:0
# Locals:
#   0:	fruits
func SwitchStatementWithBadNodesAndDefault():
0:                                                                         entry
	%t0 = console.log("switch entry")
	%t1 = "Oranges"
	jump 2
1:                                                                       if.done
	%t3 = console.log("switch done")
2:                                                                       if.else
	%t2 = console.log("switch case default")
	jump 1

# Name: SwitchStatementWithoutDefault
# File: statements.js
# Location: statements.js:162:0
# Locals:
#   0:	fruits
func SwitchStatementWithoutDefault():
0:                                                                         entry
	%t0 = console.log("switch entry")
	%t1 = "Oranges"
	%t2 = %t1 == "Oranges"
	if %t2 goto 2 else 3
1:                                                                       if.done
	%t8 = console.log("switch done")
2:                                                                       if.then
	%t3 = console.log("switch case 1")
	jump 1
3:                                                                       if.done
	%t4 = %t1 == "Mangoes"
	if %t4 goto 4 else 5
4:                                                                       if.then
	%t5 = console.log("switch case 2")
	jump 1
5:                                                                       if.done
	%t6 = %t1 == "Papayas"
	if %t6 goto 6 else 1
6:                                                                       if.then
	%t7 = console.log("switch case 3")
	jump 1

# Name: TryStatement
# File: statements.js
# Location: statements.js:30:0
func TryStatement():
0:                                                                         entry
	%t0 = console.log("try entry")
1:                                                                      try.then
	%t1 = console.log("try body")
	jump 4
2:                                                                      try.done
	%t5 = console.log("try done")
3:                                                                   try.finally
	%t2 = console.log("try finally")
	jump 2
4:                                                                     try.catch
	if e goto 5 else 3
5:                                                                   try.catch.0
	%t3 = console.log(e)
	%t4 = console.log("try catch")
	jump 3

# Name: TryStatementWithoutCatch
# File: statements.js
# Location: statements.js:61:0
func TryStatementWithoutCatch():
0:                                                                         entry
	%t0 = console.log("try entry")
1:                                                                      try.then
	%t1 = console.log("try body")
	jump 3
2:                                                                      try.done
	%t3 = console.log("try done")
3:                                                                   try.finally
	%t2 = console.log("try finally")
	jump 2

# Name: TryStatementWithoutFinally
# File: statements.js
# Location: statements.js:47:0
func TryStatementWithoutFinally():
0:                                                                         entry
	%t0 = console.log("try entry")
1:                                                                      try.then
	%t1 = console.log("try body")
	jump 3
2:                                                                      try.done
	%t4 = console.log("try done")
3:                                                                     try.catch
	if e goto 4 else 2
4:                                                                   try.catch.0
	%t2 = console.log(e)
	%t3 = console.log("try catch")
	jump 2

# Name: WhileStatement
# File: statements.js
# Location: statements.js:74:0
# Locals:
#   0:	i
#   1:	i
func WhileStatement():
0:                                                                         entry
	%t0 = "0"
	jump 2
1:                                                                    while.body
	%t2 = console.log("test")
	%t3 = %t0 === "2"
	if %t3 goto 4 else 5
2:                                                                    while.cond
	%t1 = %t0 <= "5"
	if %t1 goto 1 else 3
3:                                                                    while.done
	%t8 = console.log("finish")
4:                                                                       if.then
	%t4 = console.log("two")
	jump 2
5:                                                                       if.done
	%t5 = %t0 === "4"
	if %t5 goto 7 else 8
6:                                                                   unreachable
	jump 5
7:                                                                       if.then
	%t6 = console.log("finish")
	jump 3
8:                                                                       if.done
	%t7 = %t0 + "1"
	jump 2
9:                                                                   unreachable
	jump 8

